name: Ubuntu Combined

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - master
      - main

env:
  IDRIS2_VERSION: 0.3.0 # For previous-version build
  SCHEME: scheme

jobs:

  #
  # Boostrapping and Previous Version Builds
  #

  build-bootstrap-chez:
    runs-on: ubuntu-latest
    env:
      IDRIS2_CG: chez
      IDRIS2_TESTS_CG: chez
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install build dependencies
        run: |
          sudo apt-get install -y chezscheme
          echo "$HOME/.idris2/bin" >> $GITHUB_PATH
      - name: Build from bootstrap
        run: make bootstrap && make install
      - name: Artifact Bootstrapped Idris2
        uses: actions/upload-artifact@v2
        with:
          name: installed-bootstrapped-idris2-chez
          path: ~/.idris2/

  build-bootstrap-racket:
    runs-on: ubuntu-latest
    env:
      IDRIS2_CG: racket
      IDRIS2_TESTS_CG: racket
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install build dependencies
        run: |
          sudo apt-get install -y racket
          echo "$HOME/.idris2/bin" >> $GITHUB_PATH
      - name: Build from bootstrap
        run: make bootstrap-racket && make install
      - name: Artifact Bootstrapped Idris2
        uses: actions/upload-artifact@v2
        with:
          name: installed-bootstrapped-idris2-racket
          path: ~/.idris2/

  build-previous-version:
    runs-on: ubuntu-latest
    env:
      IDRIS2_CG: chez
      IDRIS2_TESTS_CG: chez
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install build dependencies
        run: |
          sudo apt-get install -y chezscheme
          echo "$HOME/.idris2/bin" >> $GITHUB_PATH

      - name: Cache Chez Previous Version
        id: previous-version-cache
        uses: actions/cache@v2
        with:
          path: Idris2-${{ env.IDRIS2_VERSION }}
          key: ${{ runner.os }}-idris2-bootstrapped-${{ env.IDRIS2_VERSION }}
      - name : Build previous version
        if: steps.previous-version-cache.outputs.cache-hit != 'true'
        run: |
          wget https://www.idris-lang.org/idris2-src/idris2-$IDRIS2_VERSION.tgz
          tar zxvf idris2-$IDRIS2_VERSION.tgz
          cd Idris2-$IDRIS2_VERSION
          make bootstrap-build
          cd ..
      - name: Install previous version
        run: |
          cd Idris2-$IDRIS2_VERSION
          make install
          cd ..

      - name: Cache Idris2 from Previous Version Build
        uses: actions/cache@v2
        with:
          path: |
            build/
            libs/base/build/
            libs/contrib/build/
            libs/network/build/
            libs/prelude/build/
            libs/test/build/
          key: ${{ runner.os }}-from-previous-version-${{ github.ref }}-${{ env.IDRIS2_VERSION }}
          restore-keys: |
            ${{ runner.os }}-from-previous-version-refs/heads/main-${{ env.IDRIS2_VERSION }}
            ${{ runner.os }}-from-previous-version-refs/heads/master-${{ env.IDRIS2_VERSION }}
      - name: Build from previous version
        run: make all && make install

      - name: Artifact Idris2
        uses: actions/upload-artifact@v2
        with:
          name: from-idris2-${{ env.IDRIS2_VERSION }}-chez
          path: ~/.idris2/

  #
  # Self Hosting and Testing
  #

  self-host-chez:
    needs: build-bootstrap-chez
    runs-on: ubuntu-latest
    env:
      IDRIS2_CG: chez
      IDRIS2_TESTS_CG: chez
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: installed-bootstrapped-idris2-chez
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          sudo apt-get install -y chezscheme
          echo "$HOME/.idris2/bin" >> $GITHUB_PATH
          chmod +x $HOME/.idris2/bin/idris2 $HOME/.idris2/bin/idris2_app/*

      - name: Set TTC_VERSION for Cache
        run: echo "TTC_VERSION=$(grep -P "ttcVersion = \K\d+" src/Core/Binary.idr -o)" >> $GITHUB_ENV
      - name: Cache Idris2 Self Host from Racket
        uses: actions/cache@v2
        with:
          path: |
            build/
            libs/base/build/
            libs/contrib/build/
            libs/network/build/
            libs/prelude/build/
            libs/test/build/
          key: ${{ runner.os }}-self-host-from-chez-${{ github.ref }}-${{ env.TTC_VERSION }}
          restore-keys: |
            ${{ runner.os }}-self-host-from-chez-refs/heads/main-${{ env.TTC_VERSION }}
            ${{ runner.os }}-self-host-from-chez-refs/heads/master-${{ env.TTC_VERSION }}

      - name: Build self-hosted
        run: make all IDRIS2_BOOT="idris2 -Werror" && make install
      - name: Test self-hosted
        run: make test INTERACTIVE=''

  self-host-racket:
    needs: build-bootstrap-racket
    runs-on: ubuntu-latest
    env:
      IDRIS2_CG: racket
      IDRIS2_TESTS_CG: racket
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: installed-bootstrapped-idris2-racket
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          sudo apt-get install -y racket
          echo "$HOME/.idris2/bin" >> $GITHUB_PATH
          chmod +x $HOME/.idris2/bin/idris2 $HOME/.idris2/bin/idris2_app/*

      - name: Set TTC_VERSION for Cache
        run: echo "TTC_VERSION=$(grep -P "ttcVersion = \K\d+" src/Core/Binary.idr -o)" >> $GITHUB_ENV
      - name: Cache Idris2 Self Host from Racket
        uses: actions/cache@v2
        with:
          path: |
            build/
            libs/base/build/
            libs/contrib/build/
            libs/network/build/
            libs/prelude/build/
            libs/test/build/
          key: ${{ runner.os }}-self-host-from-racket-${{ github.ref }}-${{ env.TTC_VERSION }}
          restore-keys: |
            ${{ runner.os }}-self-host-from-racket-refs/heads/main-${{ env.TTC_VERSION }}
            ${{ runner.os }}-self-host-from-racket-refs/heads/master-${{ env.TTC_VERSION }}

      - name: Build self-hosted
        run: make all IDRIS2_BOOT="idris2 -Werror" && make install
      - name: Test self-hosted
        run: make test INTERACTIVE=''

  self-host-previous-version:
    needs: build-previous-version
    runs-on: ubuntu-latest
    env:
      IDRIS2_CG: chez
      IDRIS2_TESTS_CG: chez
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: from-idris2-${{ env.IDRIS2_VERSION }}-chez
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          sudo apt-get install -y chezscheme
          echo "$HOME/.idris2/bin" >> $GITHUB_PATH
          chmod +x $HOME/.idris2/bin/idris2 $HOME/.idris2/bin/idris2_app/*

      - name: Set TTC_VERSION for Cache
        run: echo "TTC_VERSION=$(grep -P "ttcVersion = \K\d+" src/Core/Binary.idr -o)" >> $GITHUB_ENV
      - name: Cache Idris2 Self Host from Previous Version Build
        uses: actions/cache@v2
        with:
          path: |
            build/
            libs/base/build/
            libs/contrib/build/
            libs/network/build/
            libs/prelude/build/
            libs/test/build/
          key: ${{ runner.os }}-self-host-from-previous-version-${{ github.ref }}-${{ env.TTC_VERSION }}
          restore-keys: |
            ${{ runner.os }}-self-host-from-previous-version-refs/heads/main-${{ env.TTC_VERSION }}
            ${{ runner.os }}-self-host-from-previous-version-refs/heads/master-${{ env.TTC_VERSION }}

      - name: Build self-hosted from previous version
        run: make all IDRIS2_BOOT="idris2 -Werror" && make install
      - name: Test self-hosted from previous version
        run: make test INTERACTIVE=''
      - name: Artifact Idris2
        uses: actions/upload-artifact@v2
        with:
          name: idris2-nightly-chez
          path: ~/.idris2/

  build-api:
    needs: build-bootstrap-chez
    runs-on: ubuntu-latest
    env:
      IDRIS2_CG: chez
      IDRIS2_TESTS_CG: chez
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Idris2 Artifact
        uses: actions/download-artifact@v2
        with:
          name: installed-bootstrapped-idris2-chez
          path: ~/.idris2/
      - name: Install build dependencies
        run: |
          sudo apt-get install -y chezscheme
          echo "$HOME/.idris2/bin" >> $GITHUB_PATH
          chmod +x $HOME/.idris2/bin/idris2 $HOME/.idris2/bin/idris2_app/*

      - name: Set TTC_VERSION for Cache
        run: echo "TTC_VERSION=$(grep -P "ttcVersion = \K\d+" src/Core/Binary.idr -o)" >> $GITHUB_ENV
      - name: Cache Idris2 API
        uses: actions/cache@v2
        with:
          path: |
            build/
            libs/base/build/
            libs/contrib/build/
            libs/network/build/
            libs/prelude/build/
            libs/test/build/
          key: ${{ runner.os }}-build-api-${{ github.ref }}-${{ env.TTC_VERSION }}
          restore-keys: |
            ${{ runner.os }}-build-api-refs/heads/main-${{ env.TTC_VERSION }}
            ${{ runner.os }}-build-api-refs/heads/master-${{ env.TTC_VERSION }}

      - name: Build API
        run: make install-api
        shell: bash
      - name: Test API
        run: cd tests/idris2/api001 && ./run idris2
        shell: bash

  sphinx-doc-check:
    name: Sphinx
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: ammaraskar/sphinx-action@master
      with:
        docs-folder: "docs/"
